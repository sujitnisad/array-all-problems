 private :
     void perm(int pos,vector<int>& v,vector<vector<int>>& ans)
    {
        if(pos>=v.size())
        {
            ans.push_back(v);
        }
        for(int i=pos;i<v.size();i++)
        {
            swap(v[i],v[pos]); //first swap to get the ith element on desired position
            perm(pos+1,v,ans); // recursive call for remaining elements
            swap(v[i],v[pos]); //back tracking or cleaning
        }
    }
    public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> ans;
        int pos=0;
        perm(pos,nums,ans);
        return ans;
    }